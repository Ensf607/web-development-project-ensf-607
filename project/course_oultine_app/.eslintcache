[{"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js":"1","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js":"2","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js":"3","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js":"4","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js":"5","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js":"6","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js":"7","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js":"8","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js":"9","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js":"10","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunCalculator.js":"11","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunTextbook.js":"12","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\LastAddedOutline.js":"13","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunTimeTable.js":"14","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js":"15","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCoordinators.js":"16","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js":"17","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTimetable.js":"18","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInstructors.js":"19","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTA.js":"20","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js":"21","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCalculator.js":"22","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchExaminations.js":"23","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTextbook.js":"24","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js":"25","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js":"26","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchPolicies.js":"27"},{"size":485,"mtime":1610242894444,"results":"28","hashOfConfig":"29"},{"size":1944,"mtime":1610226744766,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1608173568708,"results":"31","hashOfConfig":"29"},{"size":9388,"mtime":1610226744887,"results":"32","hashOfConfig":"29"},{"size":302,"mtime":1610226744888,"results":"33","hashOfConfig":"29"},{"size":46484,"mtime":1610342224035,"results":"34","hashOfConfig":"29"},{"size":4750,"mtime":1610226744874,"results":"35","hashOfConfig":"29"},{"size":5066,"mtime":1610226744797,"results":"36","hashOfConfig":"29"},{"size":23918,"mtime":1610226744835,"results":"37","hashOfConfig":"29"},{"size":21972,"mtime":1610226744783,"results":"38","hashOfConfig":"29"},{"size":527,"mtime":1610226744767,"results":"39","hashOfConfig":"29"},{"size":3513,"mtime":1610226744839,"results":"40","hashOfConfig":"29"},{"size":16022,"mtime":1610343086883,"results":"41","hashOfConfig":"29"},{"size":4797,"mtime":1610226744841,"results":"42","hashOfConfig":"29"},{"size":1608,"mtime":1610226744944,"results":"43","hashOfConfig":"29"},{"size":1861,"mtime":1610323818867,"results":"44","hashOfConfig":"29"},{"size":1907,"mtime":1610226744936,"results":"45","hashOfConfig":"29"},{"size":1835,"mtime":1610226744946,"results":"46","hashOfConfig":"29"},{"size":2137,"mtime":1610226744936,"results":"47","hashOfConfig":"29"},{"size":2114,"mtime":1610226744945,"results":"48","hashOfConfig":"29"},{"size":2538,"mtime":1610226744935,"results":"49","hashOfConfig":"29"},{"size":366,"mtime":1610226744918,"results":"50","hashOfConfig":"29"},{"size":432,"mtime":1610340518549,"results":"51","hashOfConfig":"29"},{"size":4018,"mtime":1610247843203,"results":"52","hashOfConfig":"29"},{"size":2600,"mtime":1610228323691,"results":"53","hashOfConfig":"29"},{"size":491,"mtime":1610226744943,"results":"54","hashOfConfig":"29"},{"size":2623,"mtime":1610226744945,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"808ijm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js",[],["115","116"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useEffect, useState } from \"react\";\r\nimport FunInfo from \"../add_outline_componenets/FunInfo.js\";\r\nimport FunGrade from \"../add_outline_componenets/FunGrade\";\r\nimport FunOutcome from \"../add_outline_componenets/FunOutcome.js\";\r\nimport FunCalculator from \"../add_outline_componenets/FunCalculator.js\"\r\nimport SearchPolicies from \"../search_componenets/SearchPolicies\"\r\nimport FunTextbook from \"../add_outline_componenets/FunTextbook.js\"\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ReactQuill from \"react-quill\";\r\nimport MUIRichTextEditor from \"mui-rte\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport RichTextEditor from \"react-rte\";\r\nimport TimeTable from \"../add_outline_componenets/FunTimeTable\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nconst AddCourse = () => {\r\n  const classes = useStyles();\r\n\r\n  const [examinationEditorState, setExaminationEditorState] = useState(\r\n    RichTextEditor.createEmptyValue()\r\n  );\r\n\r\n\r\n  const toolbarConfig = {\r\n    display: [\"INLINE_STYLE_BUTTONS\", \"BLOCK_TYPE_BUTTONS\", \"HISTORY_BUTTONS\"],\r\n    INLINE_STYLE_BUTTONS: [\r\n      { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\r\n      { label: \"Italic\", style: \"ITALIC\" },\r\n      { label: \"Underline\", style: \"UNDERLINE\" },\r\n    ],\r\n    BLOCK_TYPE_DROPDOWN: [\r\n      { label: \"Normal\", style: \"unstyled\" },\r\n      { label: \"Heading Large\", style: \"header-one\" },\r\n      { label: \"Heading Medium\", style: \"header-two\" },\r\n      { label: \"Heading Small\", style: \"header-three\" },\r\n    ],\r\n    BLOCK_TYPE_BUTTONS: [\r\n      { label: \"UL\", style: \"unordered-list-item\" },\r\n      { label: \"OL\", style: \"ordered-list-item\" },\r\n    ],\r\n  };\r\n  const [save,setSave]=useState(false)\r\n  const [info,setInfo]=useState({courseID:\"\"})\r\n  const [outcome,setOutcome]=useState(\"\")\r\n  const[timeTable,setTimeTable]=useState(\"\")\r\nuseEffect(()=>{\r\n  if(timeTable.courseID!==\"\")\r\nconsole.log(timeTable)\r\n},[outcome])\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Container maxWidth=\"md\">\r\n          <div className=\"pt-2 pb-2\" align=\"center\">\r\n            <Button variant=\"outlined\" color=\"secondary\" onClick={()=>{\r\n              setSave(true)\r\n              if(info.courseID===\"\")\r\n             { alert(\"Please fill in course number,term, and year\")\r\n              \r\n            }   \r\n                          \r\n               }}>\r\n              <SaveIcon />\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n      </AppBar>\r\n\r\n      <br />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                1. Calendar Information\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <FunInfo  setSave={setSave} setInfo={setInfo} info={info}/>\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                2. Learning Outcomes\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <FunOutcome save={save} setSave={setSave} setOutcome={setOutcome} courseID={info.courseID} />\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                3. Timetable\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <TimeTable save={save} setSave={setSave} setTimeTable={setTimeTable} courseID={info.courseID}/>\r\n              <Paper className={classes.paper} elevation={3}></Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                4. Course Instructors\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}></Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                5. Examinations\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <Container maxWidth=\"md\">\r\n                  <RichTextEditor\r\n                    value={examinationEditorState}\r\n                    onChange={(value) => setExaminationEditorState(value)}\r\n                    onClick={console.log(\r\n                      examinationEditorState.toString(\"html\")\r\n                    )}\r\n                    toolbarConfig={toolbarConfig}\r\n                    placeholder=\"Provide a list of all course exams, authorized materials, and whenever possible, timetabling information...\"\r\n                  />\r\n                </Container>\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                6. Use of Calculators in Examinations\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}><FunCalculator /></Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                7. Final Grade Determination\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <FunGrade />\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                8. Textbook\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n              <FunTextbook/>\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n        <Accordion defaultExpanded={true} elevation={5}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Typography>\r\n              <label className=\"label is-size-3 has-text-left\">\r\n                9. Course Policies\r\n              </label>\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <div style={{ width: \"100%\" }}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <SearchPolicies />\r\n              </Paper>\r\n            </div>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddCourse;\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js",["137","138","139","140","141","142","143"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js",["144","145","146"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function BasicTable(props) {\r\n  const [count, setCount] = useState(2);\r\n  const classes = useStyles();\r\n\r\n  const [outcomes, setOutcomes] = useState([{ id: 1, outcome: \"\" }]);\r\n\r\n  const [attributeRows, setAttributeRows] = useState([\r\n    { id: 1, attribute: \"\", instructionLevel: \"\" },\r\n  ]);\r\n\r\n  const editAttribute = (id, attribute, instructionLvl) => {\r\n    let indx = attributeRows.findIndex((row) => row.id === id);\r\n    let newAttributes = attributeRows;\r\n    if (attribute !== \"\") newAttributes[indx].attribute = attribute;\r\n    if (instructionLvl !== \"\")\r\n      newAttributes[indx].instructionLevel = instructionLvl;\r\n    setAttributeRows(newAttributes);\r\n    console.log(attributeRows);\r\n  };\r\n\r\n  const editOutcomes = (id, outcome) => {\r\n    let indx = outcomes.findIndex((row) => row.id === id);\r\n    let newOutcomes = outcomes;\r\n\r\n    newOutcomes[indx].outcome = outcome;\r\n\r\n    setOutcomes(newOutcomes);\r\n    //setRows(newRows)\r\n    // console.log(outcomes)\r\n  };\r\n  useEffect(() => {\r\n    if (props.save) {\r\n      let temp = [];\r\n      for (let i = 0; i < outcomes.length; i++) {\r\n        temp.push({\r\n          courseID: props.courseID,\r\n          OutcomeNum: outcomes[i].id,\r\n          Description: outcomes[i].outcome,\r\n          GraduateAttribute: attributeRows[i].attribute,\r\n          InstructionLvl: attributeRows[i].InstructionLvl,\r\n        });\r\n      }\r\n\r\n      props.setOutcome(temp);\r\n      props.setSave(false);\r\n    }\r\n  }, [props.save]);\r\n\r\n  const removeRow = (id) => {\r\n    let newRows = outcomes.filter((row) => row.id !== id);\r\n    let newAttributeRows = attributeRows.filter((row) => row.id !== id);\r\n    for (let i = 0; i < newRows.length; i++) {\r\n      if (newRows[i].id > id) {\r\n        newRows[i].id = newRows[i].id - 1;\r\n        newAttributeRows[i].id = newAttributeRows[i].id - 1;\r\n      }\r\n    }\r\n    setAttributeRows(newAttributeRows);\r\n    setOutcomes(newRows);\r\n  };\r\n\r\n  const addRow = () => {\r\n    // console.log(...rows)\r\n\r\n    let newRows = outcomes;\r\n    setCount(count + 1);\r\n    console.log(newRows);\r\n    let newAttributeRows = attributeRows;\r\n    newAttributeRows.push({\r\n      id: attributeRows.length + 1,\r\n      attribute: \"\",\r\n      instructionLevel: \"\",\r\n    });\r\n    setAttributeRows(newAttributeRows);\r\n\r\n    newRows.push({ id: outcomes.length + 1, outcome: \"\" });\r\n    setOutcomes(newRows);\r\n    // console.log(rows)\r\n  };\r\n\r\n  function mathContentElementOptions() {\r\n    return (\r\n      <Select native onChange={(e) => {}}>\r\n        <option aria-label=\"None\" value={\"\"} />\r\n        <option value=\"DiffCalc\">DiffCalc</option>\r\n        <option value=\"DiffEq\">DiffEq</option>\r\n        <option value=\"Discrete\">Discrete</option>\r\n        <option value=\"IntCalc\">IntCalc</option>\r\n        <option value=\"LinAlg\">LinAlg</option>\r\n        <option value=\"NMeths\">NMeths</option>\r\n        <option value=\"Prob\">Prob</option>\r\n        <option value=\"Stats\">Stats</option>\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  function naturalScienceElementOptions() {\r\n    return (\r\n      <Select native onChange={(e) => {}}>\r\n        <option aria-label=\"None\" value={\"\"} />\r\n        <option value=\"Chem\">Chem</option>\r\n        <option value=\"Earth\">Earth</option>\r\n        <option value=\"Life\">Life</option>\r\n        <option value=\"Phys\">Phys</option>\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  function complementaryOptions() {\r\n    return (\r\n      <Select native onChange={(e) => {}}>\r\n        <option aria-label=\"None\" value={\"\"} />\r\n        <option value=\"EngEcon\">EngEcon</option>\r\n        <option value=\"H&S\">H&S</option>\r\n        <option value=\"HumSS\">HumSS</option>\r\n        <option value=\"Impacts\">Impacts</option>\r\n        <option value=\"OWComm\">OWComm</option>\r\n        <option value=\"PEthics\">PEthics</option>\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <colgroup>\r\n            <col width=\"10%\" />\r\n            <col width=\"80%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Number</TableCell>\r\n              <TableCell align=\"right\">Learning Outcome</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {outcomes.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    inputProps={{ style: { textAlign: \"center\" } }}\r\n                    value={row.id}\r\n                    readOnly={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    fullWidth={true}\r\n                    onChange={(e) => {\r\n                      editOutcomes(row.id, e.target.value);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n\r\n                <div className={classes.root}>\r\n                  <br />\r\n                  <DeleteIcon onClick={() => removeRow(row.id)} />\r\n                </div>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            addRow();\r\n          }}\r\n        >\r\n          {\" \"}\r\n          +\r\n        </Button>\r\n      </TableContainer>\r\n      <div align=\"left\">\r\n        <br />\r\n        Graduate Attributes are generic characteristics specified by the CEAB\r\n        (Canadian Engineering Accreditation Board), expected to be exhibited by\r\n        graduates of Canadian engineering schools. This table summarizes how the\r\n        Learning Outcomes relate to key Graduate Attributes addressed in this\r\n        course.\r\n      </div>\r\n      <br />\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table 2\">\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"50%\" />\r\n            <col width=\"20%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Learning Outcome</TableCell>\r\n              <TableCell align=\"right\">Graduate Attribute</TableCell>\r\n              <TableCell align=\"right\">Instruction Level</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {attributeRows.map((attributeRow) => (\r\n              <TableRow key={attributeRow.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    inputProps={{ style: { textAlign: \"center\" } }}\r\n                    value={attributeRow.id}\r\n                    readOnly={true}\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Select\r\n                    native\r\n                    onChange={(e) =>\r\n                      editAttribute(attributeRow.id, e.target.value, \"\")\r\n                    }\r\n                  >\r\n                    <option aria-label=\"None\" value={attributeRow.attribute} />\r\n                    <option value=\"A1. A knowledge base for engineering\">\r\n                      A1. A knowledge base for engineering\r\n                    </option>\r\n                    <option value=\"A2. Problem analysis\">\r\n                      A2. Problem analysis\r\n                    </option>\r\n                    <option value=\"A3. Investigation\">A3. Investigation</option>\r\n                    <option value=\"A4. Design\">A4. Design</option>\r\n                    <option value=\"A5. Use of engineering tools\">\r\n                      A5. Use of engineering tools\r\n                    </option>\r\n                    <option value=\"A6. Individual and team work\">\r\n                      A6. Individual and team work\r\n                    </option>\r\n                    <option value=\"A7. Communication skills\">\r\n                      A7. Communication skills\r\n                    </option>\r\n                    <option value=\"A8. Professionalism\">\r\n                      A8. Professionalism\r\n                    </option>\r\n                    <option value=\"A9. Impact of engineering on society/environment\">\r\n                      A9. Impact of engineering on society/environment\r\n                    </option>\r\n                    <option value=\"A10. Ethics and equity\">\r\n                      A10. Ethics and equity\r\n                    </option>\r\n                    <option value=\"A11. Economics and project management\">\r\n                      A11. Economics and project management\r\n                    </option>\r\n                    <option value=\"A12. Life-long learning\">\r\n                      A12. Life-long learning\r\n                    </option>\r\n                  </Select>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"right\">\r\n                  <Select\r\n                    native\r\n                    onChange={(e) =>\r\n                      editAttribute(attributeRow.id, \"\", e.target.value)\r\n                    }\r\n                  >\r\n                    <option\r\n                      aria-label=\"None\"\r\n                      value={attributeRow.instructionLevel}\r\n                    />\r\n                    <option value=\"I (Introduced)\">I (Introduced)</option>\r\n                    <option value=\"D (Developed)\">D (Developed)</option>\r\n                    <option value=\"A (Applied)\">A (Applied)</option>\r\n                  </Select>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n      </TableContainer>\r\n\r\n      <br />\r\n      <Typography variant=\"h5\">Course Content Categories</Typography>\r\n\r\n      <div align=\"center\">\r\n        <br />\r\n        The following table displays the course content categories and their AU\r\n        (Accreditation Unit) percentages\r\n      </div>\r\n      <br />\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table 2\">\r\n          <colgroup>\r\n            <col width=\"30%\" />\r\n            <col width=\"25%\" />\r\n            <col width=\"25%\" />\r\n            <col width=\"20%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Course Content Category</TableCell>\r\n              <TableCell>Content Element</TableCell>\r\n              <TableCell>Content Element</TableCell>\r\n              <TableCell>AU %</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow key={\"Math\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Math\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">{mathContentElementOptions()}</TableCell>\r\n              <TableCell align=\"right\">{mathContentElementOptions()}</TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value > 100) e.target.value = 100;\r\n                    if (e.target.value < 0) e.target.value = 0;\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key={\"Natural Science\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Natural Science\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {naturalScienceElementOptions()}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {naturalScienceElementOptions()}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value > 100) e.target.value = 100;\r\n                    if (e.target.value < 0) e.target.value = 0;\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key={\"Complementary Studies\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Complementary Studies\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">{complementaryOptions()}</TableCell>\r\n              <TableCell align=\"right\">{complementaryOptions()}</TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value > 100) e.target.value = 100;\r\n                    if (e.target.value < 0) e.target.value = 0;\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key={\"Engineering Science\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Engineering Science\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"X\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"X\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value > 100) e.target.value = 100;\r\n                    if (e.target.value < 0) e.target.value = 0;\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow key={\"Engineering Design\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Engineering Design\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"X\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"X\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value > 100) e.target.value = 100;\r\n                    if (e.target.value < 0) e.target.value = 0;\r\n                  }}\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n      </TableContainer>\r\n\r\n      <div style={{ color: \"red\" }}>\r\n        *At least one element must be selected for categories that identify AUs\r\n      </div>\r\n\r\n      <br />\r\n      <Typography variant=\"h5\">Course Section Information</Typography>\r\n\r\n      <br />\r\n\r\n      <div>\r\n        Ensure that the number of sections and hours per week are updated. You\r\n        may leave the \"Number of Students Per Supervisor\" column for lecture\r\n        blank.\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table 2\">\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"30%\" />\r\n            <col width=\"30%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n            <TableCell>Type</TableCell>\r\n              <TableCell>Number of Sections</TableCell>\r\n              <TableCell align=\"right\">Hours Per Week</TableCell>\r\n              <TableCell align=\"right\">Number of Students Per Supervisor</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          <TableRow key={\"Lecture\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Lecture\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n\r\n            <TableRow key={\"Tutorial\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Tutorial\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n\r\n            <TableRow key={\"Lab\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                  value={\"Lab\"}\r\n                  readOnly={true}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n      </TableContainer>\r\n\r\n\r\n      <br />\r\n      <Typography variant=\"h5\">Laboratory Information</Typography>\r\n\r\n      <br />\r\n\r\n      <div>\r\n      Ignore this table if the course does not have a laboratory section.\r\n      Number of Labs is the number of lab sessions students are required to attend.\r\n      </div>\r\n\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table 2\">\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"30%\" />\r\n            <col width=\"30%\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n            <TableCell>Lab Type</TableCell>\r\n              <TableCell>Number of Labs</TableCell>\r\n              <TableCell align=\"right\">Lab Safety Taught?</TableCell>\r\n              <TableCell align=\"right\">Lab Safety Examined?</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n          <TableRow key={\"Laboratory Experience\"}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n              <Select native onChange={(e) => {}}>\r\n              <option aria-label=\"None\" value={\"\"} />\r\n              <option value=\"Hands-on\">Hands-on</option>\r\n              <option value=\"Simulation\">Simulation</option>\r\n              <option value=\"Problem\">Problem</option>\r\n              <option value=\"Project\">Project</option>\r\n              <option value=\"Demo\">Demo</option>\r\n              <option value=\"Other\">Other</option>\r\n              </Select>\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <TextField\r\n                  inputProps={{ style: { textAlign: \"center\" } }}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n              <Select native onChange={(e) => {}}>\r\n              <option aria-label=\"None\" value={\"\"} />\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n              </Select>\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n              <Select native onChange={(e) => {}}>\r\n              <option aria-label=\"None\" value={\"\"} />\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n              </Select>\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js",["147","148","149","150","151","152","153","154","155","156"],"import React, {useReducer, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Container } from '@material-ui/core';\r\nimport RichTextEditor from \"react-rte\";\r\n\r\n\r\nconst FunGrade=()=> {\r\n    var defaultTexts = [\"a) You must either achieve at least 50% on the final exam or achieve at least 50% on the weighted average of the midterm and final exam. You must also achieve an average of at least 50% on the lab section of the course. If you do not satisfy these caveats, you will not receive a passing grade.\",\r\n        \"b) Circumstances beyond one’s control (e.g. sickness, etc.), leading to missing lab session and/or delays in assignment submissions should be discussed with the course instructor as soon as possible. Proper documentation must be provided.\",\r\n        \"c) Conversion from a score out of 100 to a letter grade will be done using the conversion chart shown below. This grading scale can only be changed during the term if the grades will not be lowered.\"]\r\n    return (\r\n        <div className=\"FunGrade\">\r\n            {/*<h1> This is the Grade Section</h1>*/}\r\n            <p align=\"left\">The final grade in this course will be based on the following components:</p>\r\n            <div align=\"center\"><FinalGradeTable/></div>\r\n            <div class=\"content\" align=\"center\">\r\n                <h5 className=\"subtitle is-4\" align=\"left\"> Notes: </h5>\r\n                <Notes/>\r\n\r\n            </div>\r\n            <label className=\"label is-size-5 has-text-left pl-1\">Letter Grades</label>\r\n            <div align=\"center\"><LetterGradeTable/></div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\n// The first table\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nfunction FinalGradeTable() {\r\n\r\n    //added\r\n    const [gradeTotal, setGradeTotal] = useState(0)\r\n    const [enteredVals, setEnteredVals] = useState([{id:1, val: 0}])\r\n    const [gradeCheck, setGradeCheck] = useState(true);\r\n    const [toggleError, setToggleError] = useState(false);\r\n    const [errorHelper, setErrorHelper] = useState(\"\")\r\n\r\n    //added\r\n    const editGradeTotal=(id, enteredVal)=>{\r\n        let indx = enteredVals.findIndex((row) => row.id === id)\r\n        let newVal = enteredVals        \r\n        if(indx >= 0)\r\n            newVal[indx]={id:id, val:enteredVal}\r\n        else\r\n            newVal.push({id:id,  val:enteredVal})\r\n        setEnteredVals(newVal)\r\n        let gradeTotalTemp = newVal.reduce((x, y) => x = x + +y.val, 0)\r\n        if(gradeTotalTemp > 100){\r\n            setGradeTotal(100)\r\n            setToggleError(true)\r\n            setGradeCheck(false)\r\n            setErrorHelper(\"Enter ints totalling 100\");\r\n        }\r\n        else if(gradeTotalTemp < 0){\r\n            setGradeTotal(0)\r\n            setToggleError(true)\r\n            setGradeCheck(false)\r\n            setErrorHelper(\"Enter ints totalling 100\");\r\n        }\r\n        else if(isNaN(gradeTotalTemp)){\r\n            setGradeTotal(0)\r\n            setToggleError(true)\r\n            setGradeCheck(false)\r\n            setErrorHelper(\"Enter ints totalling 100\");\r\n        }\r\n        else if(gradeTotalTemp !== parseInt(gradeTotalTemp)){\r\n            setGradeTotal(0)\r\n            setToggleError(true)\r\n            setGradeCheck(false)\r\n            setErrorHelper(\"Enter ints totalling 100\");\r\n        }\r\n        else{\r\n            setGradeTotal(gradeTotalTemp)\r\n            setToggleError(false)\r\n            setGradeCheck(true)\r\n            setErrorHelper(\"\");\r\n        }\r\n            \r\n    }\r\n\r\n\r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n\r\n    const executeDeleteDeterminationButton = (id) => {\r\n        let indx = enteredVals.findIndex((row) => row.id === id)\r\n        if (typeof enteredVals[indx] !== \"undefined\") {\r\n        setGradeTotal(gradeTotal - enteredVals[indx].val)\r\n        }\r\n\r\n        setEnteredVals(enteredVals.filter((row) => row.id !== id))\r\n        \r\n        removeRow(id)\r\n        \r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"40%\" />\r\n                        <col width=\"40%\" />\r\n                        <col width=\"20%\" />\r\n                                              \r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell><div align=\"left\">Component</div></TableCell>\r\n                            <TableCell><div align=\"left\">Learning Outcome(s) Evaluated</div></TableCell>\r\n                            <TableCell><div align=\"center\">Weight</div></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                        editNums(row.id,e.target.value)\r\n                                    }} />\r\n                                </TableCell>\r\n                                <TableCell><TextField id=\"standard-basic\"  onChange={(e) => {\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n                                <TableCell>\r\n                                <TextField error={toggleError}  helperText={errorHelper} //added\r\n                                id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                    if(e.target.value > 100) //added\r\n                                        e.target.value = 100\r\n                                    else if(e.target.value < 0)\r\n                                        e.target.value = 0\r\n                                \r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                    editGradeTotal(row.id,e.target.value) //added\r\n\r\n                                }} />\r\n                                </TableCell>\r\n\r\n\r\n                                <div className={classes.root}>\r\n                                  <br/>\r\n                                  <DeleteIcon onClick={()=>executeDeleteDeterminationButton(row.id)} />         \r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                    \r\n                    <colgroup>\r\n                    <col width=\"40%\" />\r\n                    <col width=\"40%\" />\r\n                    <col width=\"20%\" />\r\n                    \r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell><div align=\"center\"><b>Total:</b> {gradeTotal}%</div></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n// The second table\r\nfunction LetterGradeTable() {\r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"20%\" />\r\n                        <col width=\"30%\" />\r\n                        <col width=\"20%\" />\r\n                        <col width=\"30%\" />\r\n1\r\n\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell><div align=\"center\">Letter Grade</div></TableCell>\r\n                            <TableCell><div align=\"center\">Lower Boundary</div></TableCell>\r\n                            <TableCell><div align=\"center\">Total Mark (T) </div></TableCell>\r\n                            <TableCell><div align=\"center\">Upper Boundary</div></TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                        editNums(row.id,e.target.value)\r\n                                    }} />\r\n                                </TableCell>\r\n                                <TableCell><TextField id=\"standard-basic\" fullWidth={true} onChange={(e) => {\r\n                                    if(e.target.value > 100)\r\n                                        e.target.value = 100\r\n                                    if(e.target.value < 0)\r\n                                        e.target.value = 0\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n                                <TableCell ><div align=\"center\"><th>≤  T  &lt;</th></div>\r\n                                </TableCell>\r\n\r\n                                <TableCell ><TextField id=\"standard-basic\" onChange={(e) => {\r\n                                    if(e.target.value > 100)\r\n                                        e.target.value = 100\r\n                                    if(e.target.value < 0)\r\n                                        e.target.value = 0\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n\r\n                                <div className={classes.root}>\r\n                                   <br/>\r\n                                <DeleteIcon  onClick={()=> removeRow(row.id)}/>\r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Notes() {\r\n\r\n    const toolbarConfig = {\r\n        display: [\"INLINE_STYLE_BUTTONS\", \"BLOCK_TYPE_BUTTONS\", \"HISTORY_BUTTONS\"],\r\n        INLINE_STYLE_BUTTONS: [\r\n          { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\r\n          { label: \"Italic\", style: \"ITALIC\" },\r\n          { label: \"Underline\", style: \"UNDERLINE\" },\r\n        ],\r\n        BLOCK_TYPE_DROPDOWN: [\r\n          { label: \"Normal\", style: \"unstyled\" },\r\n          { label: \"Heading Large\", style: \"header-one\" },\r\n          { label: \"Heading Medium\", style: \"header-two\" },\r\n          { label: \"Heading Small\", style: \"header-three\" },\r\n        ],\r\n        BLOCK_TYPE_BUTTONS: [\r\n          { label: \"UL\", style: \"unordered-list-item\" },\r\n          { label: \"OL\", style: \"ordered-list-item\" },\r\n        ],\r\n      };\r\n\r\n    const [gradeNotesEditorState, setGradeNotesEditorState] = useState(\r\n        RichTextEditor.createEmptyValue()\r\n      );\r\n\r\n    return(\r\n        <>\r\n             <RichTextEditor\r\n                value={gradeNotesEditorState}\r\n                onChange={(value) => setGradeNotesEditorState(value)}\r\n                onClick={console.log(\r\n                    gradeNotesEditorState.toString(\"html\")\r\n                )}\r\n                toolbarConfig={toolbarConfig}\r\n                placeholder=\"Write grade related notes here...\"\r\n            />\r\n\r\n        </>\r\n\r\n    );\r\n\r\n\r\n    {/* \r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"5%\" />\r\n                        <col width=\"5%\" />\r\n                        <col width=\"70%\" />\r\n\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Note #</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell>Note Message</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell align=\"right\"><TextField id=\"standard-basic\" onChange={(e) => {\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} /></TableCell>\r\n\r\n                                <TableCell align=\"right\">\r\n                                    <p>)</p>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true}  onChange={(e) => {\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} /></TableCell>\r\n\r\n\r\n                                <div className={classes.root} align=\"center\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button}\r\n                                                size=\"small\"\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={()=>\r\n                                                    removeRow(row.id)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={()=>{\r\n                                                    saveRow(row.id)\r\n                                                }}\r\n                                            >\r\n                                                Save\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );*/}\r\n}\r\n\r\n\r\n\r\n\r\n// export default\r\nexport default FunGrade;","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunCalculator.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunTextbook.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\LastAddedOutline.js",["157"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunTimeTable.js",["158","159","160","161"],"import React, { useState,useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function BasicTable(props) {\r\n\r\n  const [count, setCount] = useState(2);\r\n  const classes = useStyles();\r\n  \r\n  const [section,setSection]=useState([{id:1,SectionNum:\"\",Days:\"\",Time:\"\",Location:\"\"}])\r\n\r\n\r\n \r\n\r\n\r\n  const editSection=(id,SectionNum,Days,Time,Location)=>{\r\n    let indx = section.findIndex((row) => row.id === id)\r\n    let newSection=section\r\n    \r\n    if(SectionNum!==\"\")\r\n    newSection[indx].SectionNum=SectionNum\r\n    if(Days!==\"\")\r\n    newSection[indx].Days=Days\r\n    if(Time!==\"\")\r\n    newSection[indx].Time=Time\r\n    if(Location!==\"\")\r\n    newSection[indx].Location=Location\r\n    \r\n  \r\n    setSection(newSection)\r\n    //setRows(newRows)\r\n   \r\n  }\r\n  \r\nuseEffect (()=>{\r\n  if(props.save){\r\n    let temp=[]\r\n    for (let i=0;i<section.length;i++){\r\n      temp.push({courseID:props.courseID,SectionNum:section[i].SectionNum,Days:section[i].Days,Time:section[i].Time,Location:section[i].Location})\r\n    \r\n  }\r\n \r\n  props.setTimeTable(temp)\r\n\r\n  props.setSave(false)\r\n  \r\n}\r\n},[props.save])\r\n\r\n  \r\n\r\n\r\n  const removeRow = (id) => {\r\n    let newRows = section.filter((row) => row.id !== id)\r\n    \r\n   \r\n    setSection(newRows)\r\n  }\r\n  \r\n\r\n  const addRow = () => {\r\n    // console.log(...rows)\r\n\r\n    let newRows = section\r\n    setCount(count+1)\r\n    //console.log(newRows)\r\n   \r\n\r\n\r\n    newRows.push({ id: count,SectionNum:\"\",Days:\"\",Time:\"\",Location:\"\" })\r\n    setSection(newRows)\r\n   // console.log(rows)\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    <div>\r\n    Update the timetable information below. In the \"Day(s) of the Week\" column, \r\n    use M,T,W,R,F,S,U as the codes for Monday - Sunday (e.g., MWF). In the \r\n    \"Time\" column, specify the time range in 24 hour MDT (Calgary time) format (e.g., 13:00-13:50).\r\n    </div><br/>\r\n\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <colgroup>\r\n            <col width=\"10%\" />\r\n            <col width=\"30%\" />\r\n            <col width=\"30%\" />\r\n            <col width=\"20%\" />\r\n            <col width=\"10%\" />\r\n            \r\n\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Section</TableCell>\r\n              <TableCell align=\"right\">Days</TableCell>\r\n              <TableCell align=\"right\">Time</TableCell>\r\n              <TableCell align=\"right\">Location</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            \r\n            {section.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n\r\n                <TextField id=\"standard-basic\"  \r\n                inputProps={{style: { textAlign: 'center' }}}\r\n                 onChange ={(e)=>{ editSection(row.id,e.target.value,\"\",\"\",\"\")}}\r\n                 />\r\n\r\n                </TableCell>\r\n                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true} onChange={(e)=>{ editSection(row.id,\"\",e.target.value,\"\",\"\")}\r\n                } /></TableCell>\r\n                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true} onChange={(e)=>{ editSection(row.id,\"\",\"\",e.target.value,\"\")}\r\n                } /></TableCell>\r\n                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true} onChange={(e)=>{ editSection(row.id,\"\",\"\",\"\",e.target.value)}\r\n                } /></TableCell>\r\n\r\n                <div className={classes.root}>\r\n                    <br/>\r\n                    <DeleteIcon  onClick={()=> removeRow(row.id)} />\r\n\r\n                    \r\n                </div>\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n          addRow()\r\n        }}> +</Button>\r\n      </TableContainer>\r\n      \r\n\r\n     \r\n    </>\r\n  );\r\n}\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCoordinators.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTimetable.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInstructors.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTA.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCalculator.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchExaminations.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTextbook.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchPolicies.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"170","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"171","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":17},{"ruleId":"166","severity":1,"message":"172","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":18},{"ruleId":"166","severity":1,"message":"173","line":20,"column":8,"nodeType":"168","messageId":"169","endLine":20,"endColumn":25},{"ruleId":"166","severity":1,"message":"174","line":21,"column":10,"nodeType":"168","messageId":"169","endLine":21,"endColumn":16},{"ruleId":"166","severity":1,"message":"175","line":21,"column":18,"nodeType":"168","messageId":"169","endLine":21,"endColumn":29},{"ruleId":"166","severity":1,"message":"176","line":48,"column":10,"nodeType":"168","messageId":"169","endLine":48,"endColumn":15},{"ruleId":"166","severity":1,"message":"177","line":48,"column":17,"nodeType":"168","messageId":"169","endLine":48,"endColumn":25},{"ruleId":"166","severity":1,"message":"178","line":52,"column":10,"nodeType":"168","messageId":"169","endLine":52,"endColumn":32},{"ruleId":"166","severity":1,"message":"179","line":52,"column":34,"nodeType":"168","messageId":"169","endLine":52,"endColumn":59},{"ruleId":"166","severity":1,"message":"180","line":55,"column":10,"nodeType":"168","messageId":"169","endLine":55,"endColumn":24},{"ruleId":"166","severity":1,"message":"181","line":55,"column":26,"nodeType":"168","messageId":"169","endLine":55,"endColumn":43},{"ruleId":"166","severity":1,"message":"182","line":56,"column":9,"nodeType":"168","messageId":"169","endLine":56,"endColumn":20},{"ruleId":"166","severity":1,"message":"183","line":56,"column":21,"nodeType":"168","messageId":"169","endLine":56,"endColumn":35},{"ruleId":"166","severity":1,"message":"184","line":58,"column":9,"nodeType":"168","messageId":"169","endLine":58,"endColumn":18},{"ruleId":"166","severity":1,"message":"185","line":59,"column":10,"nodeType":"168","messageId":"169","endLine":59,"endColumn":21},{"ruleId":"166","severity":1,"message":"186","line":60,"column":9,"nodeType":"168","messageId":"169","endLine":60,"endColumn":19},{"ruleId":"166","severity":1,"message":"187","line":61,"column":9,"nodeType":"168","messageId":"169","endLine":61,"endColumn":11},{"ruleId":"166","severity":1,"message":"188","line":80,"column":7,"nodeType":"168","messageId":"169","endLine":80,"endColumn":16},{"ruleId":"166","severity":1,"message":"189","line":30,"column":8,"nodeType":"168","messageId":"169","endLine":30,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":61,"column":87,"nodeType":"192","messageId":"193","endLine":61,"endColumn":88},{"ruleId":"190","severity":1,"message":"191","line":86,"column":24,"nodeType":"192","messageId":"193","endLine":86,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":91,"column":27,"nodeType":"192","messageId":"193","endLine":91,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":96,"column":30,"nodeType":"192","messageId":"193","endLine":96,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":303,"column":19,"nodeType":"192","messageId":"193","endLine":303,"endColumn":20},{"ruleId":"194","severity":1,"message":"195","line":1026,"column":6,"nodeType":"196","endLine":1026,"endColumn":71,"suggestions":"197"},{"ruleId":"166","severity":1,"message":"198","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":12},{"ruleId":"166","severity":1,"message":"199","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":16},{"ruleId":"194","severity":1,"message":"200","line":71,"column":6,"nodeType":"196","endLine":71,"endColumn":18,"suggestions":"201"},{"ruleId":"166","severity":1,"message":"202","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"198","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":12},{"ruleId":"166","severity":1,"message":"199","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":16},{"ruleId":"166","severity":1,"message":"203","line":15,"column":10,"nodeType":"168","messageId":"169","endLine":15,"endColumn":19},{"ruleId":"166","severity":1,"message":"204","line":20,"column":9,"nodeType":"168","messageId":"169","endLine":20,"endColumn":21},{"ruleId":"166","severity":1,"message":"205","line":54,"column":12,"nodeType":"168","messageId":"169","endLine":54,"endColumn":22},{"ruleId":"166","severity":1,"message":"206","line":131,"column":11,"nodeType":"168","messageId":"169","endLine":131,"endColumn":18},{"ruleId":"166","severity":1,"message":"206","line":284,"column":11,"nodeType":"168","messageId":"169","endLine":284,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":425,"column":5,"nodeType":"209","messageId":"210","endLine":558,"endColumn":10},{"ruleId":"211","severity":1,"message":"212","line":425,"column":5,"nodeType":"209","messageId":"213","endLine":558,"endColumn":10},{"ruleId":"194","severity":1,"message":"214","line":208,"column":5,"nodeType":"168","endLine":208,"endColumn":14,"suggestions":"215"},{"ruleId":"166","severity":1,"message":"198","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":12},{"ruleId":"166","severity":1,"message":"199","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":16},{"ruleId":"166","severity":1,"message":"216","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":14},{"ruleId":"194","severity":1,"message":"217","line":72,"column":3,"nodeType":"196","endLine":72,"endColumn":15,"suggestions":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FunGrade' is defined but never used.","'TextField' is defined but never used.","'ReactQuill' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'Editor' is defined but never used.","'EditorState' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'examinationEditorState' is assigned a value but never used.","'setExaminationEditorState' is assigned a value but never used.","'calculatorInfo' is assigned a value but never used.","'setCalculatorInfo' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'timeTable' is assigned a value but never used.","'coordinator' is assigned a value but never used.","'instructor' is assigned a value but never used.","'ta' is assigned a value but never used.","'editNotes' is assigned a value but never used.","'EditIcon' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displaySearchResults', 'handleSelect', 'handleUpdate', 'pageToggle', and 'revealIcons'. Either include them or remove the dependency array.","ArrayExpression",["221"],"'Grid' is defined but never used.","'SaveIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'attributeRows', 'outcomes', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["222"],"'useReducer' is defined but never used.","'Container' is defined but never used.","'defaultTexts' is assigned a value but never used.","'gradeCheck' is assigned a value but never used.","'saveRow' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","React Hook useEffect contains a call to 'setPageToggle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [pageToggle, course, InfoData, outcomeData, timetableData, instructorsData, coordinatorsData, assistantsData, gradeDeterminationData, noteExaminationDescriptionCalcData, letterData, textbookData, info, outcome, timetable, instructors, coordinators, assistants, examinations, calculator, gradeDetermination, note, letter, description, textbook, classes.paper] as a second argument to the useEffect Hook.",["223"],"'Select' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'section'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [info, searchInput, tableSelection, callHandleSelect, courseList, pageToggle, revealIcons, displaySearchResults, handleUpdate, handleSelect]",{"range":"233","text":"234"},"Update the dependencies array to be: [attributeRows, outcomes, props, props.save]",{"range":"235","text":"236"},"Add dependencies array: [pageToggle, course, InfoData, outcomeData, timetableData, instructorsData, coordinatorsData, assistantsData, gradeDeterminationData, noteExaminationDescriptionCalcData, letterData, textbookData, info, outcome, timetable, instructors, coordinators, assistants, examinations, calculator, gradeDetermination, note, letter, description, textbook, classes.paper]",{"range":"237","text":"238"},"Update the dependencies array to be: [props, props.save, section]",{"range":"239","text":"240"},[43934,43999],"[info, searchInput, tableSelection, callHandleSelect, courseList, pageToggle, revealIcons, displaySearchResults, handleUpdate, handleSelect]",[2380,2392],"[attributeRows, outcomes, props, props.save]",[15832,15832],", [pageToggle, course, InfoData, outcomeData, timetableData, instructorsData, coordinatorsData, assistantsData, gradeDeterminationData, noteExaminationDescriptionCalcData, letterData, textbookData, info, outcome, timetable, instructors, coordinators, assistants, examinations, calculator, gradeDetermination, note, letter, description, textbook, classes.paper]",[1873,1885],"[props, props.save, section]"]