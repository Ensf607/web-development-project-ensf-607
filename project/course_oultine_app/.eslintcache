[{"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js":"1","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js":"2","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js":"3","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js":"4","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js":"5","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js":"6","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js":"7","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js":"8","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js":"9","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js":"10","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js":"11","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js":"12","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js":"13","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js":"14","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js":"15"},{"size":517,"mtime":1608173568707,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608173568708,"results":"18","hashOfConfig":"17"},{"size":796,"mtime":1608173568705,"results":"19","hashOfConfig":"17"},{"size":233,"mtime":1608173568707,"results":"20","hashOfConfig":"17"},{"size":3829,"mtime":1609446274744,"results":"21","hashOfConfig":"17"},{"size":363,"mtime":1609446274743,"results":"22","hashOfConfig":"17"},{"size":2571,"mtime":1608173568707,"results":"23","hashOfConfig":"17"},{"size":2960,"mtime":1608173568705,"results":"24","hashOfConfig":"17"},{"size":5270,"mtime":1609446160435,"results":"25","hashOfConfig":"17"},{"size":20068,"mtime":1609446274693,"results":"26","hashOfConfig":"17"},{"size":2314,"mtime":1609446274744,"results":"27","hashOfConfig":"17"},{"size":1470,"mtime":1609446274756,"results":"28","hashOfConfig":"17"},{"size":2483,"mtime":1609447082466,"results":"29","hashOfConfig":"17"},{"size":2415,"mtime":1609446274744,"results":"30","hashOfConfig":"17"},{"size":1837,"mtime":1609446274756,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"808ijm",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js",[],["65","66"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js",["67","68"],"import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n\r\n\r\nexport default function BasicTable() {\r\n  const [count, setCount] = useState(2);\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n  const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n  const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n \r\n  const editNums=(id,num)=>{\r\n    let indx = numbers.findIndex((num)=>num.id===id)\r\n    let newNums=numbers\r\n    //console.log(indx)\r\n    if(indx>=0)\r\n    newNums[indx]={id:id,num:num}\r\n    else\r\n    newNums.push({id:id,num:num})\r\n    \r\n    setNumbers(newNums)\r\n   // console.log(numbers)\r\n  }\r\n  const ediOutcomes=(id,outcome)=>{\r\n    let indx = outcomes.findIndex((row) => row.id === id)\r\n    let newOutcomes=outcomes\r\n    if(indx>=0)\r\n    newOutcomes[indx]={id:id,outcome:outcome}\r\n    else\r\n    newOutcomes.push({id:id,outcome:outcome})\r\n  \r\n    setOutcomes(newOutcomes)\r\n    //console.log(outcomes)\r\n  }\r\n\r\n\r\n    const saveRow= (id) => {\r\n      \r\n      let numIndx = outcomes.findIndex((row) => row.id === id)\r\n      \r\n      let num=numbers[numIndx].num\r\n      let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n      let outcome=outcomes[outcomeIndx].outcome\r\n      let rowIndx = rows.findIndex((row) => row.id === id)\r\n      let newRows=rows\r\n      newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n          \r\n      \r\n \r\n     setRows(newRows)\r\n     console.log(rows)\r\n\r\n      \r\n  };\r\n\r\n\r\n  const removeRow = (id) => {\r\n    let newRows = rows.filter((row) => row.id !== id)\r\n    \r\n    setRows(newRows)\r\n  }\r\n  const addRow = (id) => {\r\n    let newRows = rows\r\n    setCount(count+1)\r\n    let x=count\r\n    console.log(\"THIS IS \"+x)\r\n    newRows.push({ id: x, outcome: \"\" })\r\n    setRows(newRows)\r\n    console.log(rows)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <label className=\"label is-size-3 has-text-left pl-1\">2. Learning Outcomes</label>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <colgroup>\r\n            <col width=\"10%\" />\r\n            <col width=\"70%\" />\r\n\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Number</TableCell>\r\n              <TableCell align=\"right\">Learning Outcome</TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            \r\n            {rows.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                <TextField id=\"standard-basic\"   onChange={(e) => {\r\n        \r\n        editNums(row.id,e.target.value)\r\n      }} />\r\n                </TableCell>\r\n                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true} onChange={(e) => {\r\n        \r\n                  ediOutcomes(row.id,e.target.value)\r\n                }} /></TableCell>\r\n\r\n                <div className={classes.root}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item xs>\r\n                      <Paper className={classes.paper}><Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        size=\"small\"\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={()=>\r\n                        removeRow(row.id)}\r\n                      >\r\n                        Delete\r\n      </Button></Paper>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                      <Paper className={classes.paper}><Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={()=>{\r\n                          saveRow(row.id)\r\n                        }}\r\n                        \r\n                      >\r\n                        Save\r\n      </Button></Paper>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </div>\r\n\r\n\r\n\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <br />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n          addRow()\r\n        }}> +</Button>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js",["69","70","71"],"import React, {useState} from 'react';\r\n\r\nconst FunGrade=()=> {\r\n\r\n    return (\r\n        <div className=\"FunGrade\">\r\n            {/*<h1> This is the Grade Section</h1>*/}\r\n            <label className=\"label is-size-3 has-text-left pl-1\">7. Final Grade Determination</label>\r\n            <p align=\"left\">The final grade in this course will be based on the following components:</p>\r\n            <div align=\"center\"><GradeTable/></div>\r\n            <div class=\"content\" align=\"left\">\r\n                <h5 className=\"subtitle\" > Notes: </h5>\r\n                <p> a) You must either achieve at least 50% on the final exam or achieve at least 50% on the weighted average of the midterm and final exam. You must also achieve an average of at least 50% on the lab section of the course. If you do not satisfy these caveats, you will not receive a passing grade. </p>\r\n                <p> b) Circumstances beyond one’s control (e.g. sickness, etc.), leading to missing lab session and/or delays in assignment submissions should be discussed with the course instructor as soon as possible. Proper documentation must be provided.</p>\r\n                <p> c) Conversion from a score out of 100 to a letter grade will be done using the conversion chart shown below. This grading scale can only be changed during the term if the grades will not be lowered.</p>\r\n            </div>\r\n            <div align=\"center\"><LetterGradeTable/></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst GradeTable=()=> {\r\n    const [rows, setRows] = useState([{num: 1, text: \"Enter outcome\"}])\r\n    const [count, setCount] = useState(1)\r\n    const addRow = () => {\r\n        var x = rows[rows.length - 1].num\r\n        let temp = {num: x, text: \"Enter outcome\"}\r\n        rows.push({})\r\n        rows.sort()\r\n        setRows(rows)\r\n    }\r\n    const update = (num, txt) => {\r\n        let newRows = rows.filter((row) => row.num !== num)\r\n        let temp = {num: num, text: txt}\r\n        newRows.push(temp)\r\n        newRows.sort()\r\n        var x = newRows[rows.length - 1].num\r\n        let temp2 = {num: x + 1, text: \"Enter outcome\"}\r\n        newRows.push(temp2)\r\n        setRows(newRows)\r\n    }\r\n\r\n    return(\r\n        <div className=\"column\">\r\n            <div className=\"table-container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Number</th>\r\n                        <th>Outcome</th>\r\n\r\n                    </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        rows.map((row)=>{\r\n                            return (\r\n                                <tr>\r\n                                    <td id={row.num}>\r\n                                        {count}\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" placeholder={row.text} className={row.num}\r\n                                        ></input>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                <button type=\"button\" onClick={()=>{\r\n                    setCount(count+1)\r\n                    update(document.getElementById(count.toString),document.getElementsByClassName(count.toString))\r\n                    console.log(rows)}}>Add row</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LetterGradeTable=()=> {\r\n    const [rows, setRows] = useState([{num: 1, text: \"Enter outcome\"}])\r\n    const [count, setCount] = useState(1)\r\n    const addRow = () => {\r\n        var x = rows[rows.length - 1].num\r\n        let temp = {num: x, text: \"Enter outcome\"}\r\n        rows.push({})\r\n        rows.sort()\r\n        setRows(rows)\r\n    }\r\n    const update = (num, txt) => {\r\n        let newRows = rows.filter((row) => row.num !== num)\r\n        let temp = {num: num, text: txt}\r\n        newRows.push(temp)\r\n        newRows.sort()\r\n        var x = newRows[rows.length - 1].num\r\n        let temp2 = {num: x + 1, text: \"Enter outcome\"}\r\n        newRows.push(temp2)\r\n        setRows(newRows)\r\n    }\r\n\r\n    return(\r\n        <div className=\"column\">\r\n            <div className=\"table-container\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Number</th>\r\n                        <th>Outcome</th>\r\n\r\n                    </tr>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        rows.map((row)=>{\r\n                            return (\r\n                                <tr>\r\n                                    <td id={row.num}>\r\n                                        {count}\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"text\" placeholder={row.text} className={row.num}\r\n                                        ></input>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n                <button type=\"button\" onClick={()=>{\r\n                    setCount(count+1)\r\n                    update(document.getElementById(count.toString),document.getElementsByClassName(count.toString))\r\n                    console.log(rows)}}>Add row</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FunGrade;","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js",["72","73"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":8,"column":9,"nodeType":"80","messageId":"81","endLine":8,"endColumn":15},{"ruleId":"78","severity":1,"message":"82","line":10,"column":9,"nodeType":"80","messageId":"81","endLine":10,"endColumn":13},{"ruleId":"78","severity":1,"message":"83","line":17,"column":9,"nodeType":"80","messageId":"81","endLine":17,"endColumn":21},{"ruleId":"78","severity":1,"message":"84","line":43,"column":10,"nodeType":"80","messageId":"81","endLine":43,"endColumn":20},{"ruleId":"78","severity":1,"message":"85","line":344,"column":11,"nodeType":"80","messageId":"81","endLine":344,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":64,"column":76,"nodeType":"89","endLine":64,"endColumn":91},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'addRow' is assigned a value but never used.","Identifier","unusedVar","'temp' is assigned a value but never used.","'defaultTexts' is assigned a value but never used.","'createData' is defined but never used.","'editNums' is assigned a value but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]