[{"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js":"1","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js":"2","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js":"3","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js":"4","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js":"5","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js":"6","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js":"7","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js":"8","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js":"9","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js":"10","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js":"11","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js":"12","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js":"13","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js":"14","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js":"15","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTimetable.js":"16","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCalculator.js":"17","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchExaminations.js":"18","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchPolicies.js":"19","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInstructors.js":"20","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTextbook.js":"21","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunCalculator.js":"22"},{"size":517,"mtime":1608173568707,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1608173568708,"results":"25","hashOfConfig":"24"},{"size":796,"mtime":1609480816502,"results":"26","hashOfConfig":"24"},{"size":262,"mtime":1609755029739,"results":"27","hashOfConfig":"24"},{"size":15723,"mtime":1609755029747,"results":"28","hashOfConfig":"24"},{"size":8931,"mtime":1609755029739,"results":"29","hashOfConfig":"24"},{"size":4669,"mtime":1609755029696,"results":"30","hashOfConfig":"24"},{"size":3100,"mtime":1609755029651,"results":"31","hashOfConfig":"24"},{"size":4438,"mtime":1609801232180,"results":"32","hashOfConfig":"24"},{"size":19964,"mtime":1609755029630,"results":"33","hashOfConfig":"24"},{"size":2403,"mtime":1609755029787,"results":"34","hashOfConfig":"24"},{"size":1470,"mtime":1609755029788,"results":"35","hashOfConfig":"24"},{"size":1592,"mtime":1609755029787,"results":"36","hashOfConfig":"24"},{"size":2415,"mtime":1609446274744,"results":"37","hashOfConfig":"24"},{"size":1837,"mtime":1609446274756,"results":"38","hashOfConfig":"24"},{"size":1213,"mtime":1609755029789,"results":"39","hashOfConfig":"24"},{"size":343,"mtime":1609755029778,"results":"40","hashOfConfig":"24"},{"size":486,"mtime":1609755029778,"results":"41","hashOfConfig":"24"},{"size":2975,"mtime":1609755029788,"results":"42","hashOfConfig":"24"},{"size":2763,"mtime":1609755029787,"results":"43","hashOfConfig":"24"},{"size":1858,"mtime":1609755029789,"results":"44","hashOfConfig":"24"},{"size":527,"mtime":1609755029630,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"808ijm",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\index.js",[],["95","96"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\reportWebVitals.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\App.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\Home.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\SearchCourse.js",["97","98","99","100","101","102","103","104","105","106","107"],"import React, { useState } from 'react';\r\nimport Info from \"../search_componenets/SearchInfo\"\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutcomeData from \"../data/DataOutcome.json\"\r\nimport GradesData from \"../data/DataGrades.json\"\r\nimport InfoData from '../data/DataInfo.json'\r\nimport LetterData from '../data/DataLetterGrades.json'\r\nimport NoteData from '../data/DataNotes.json'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Outcome from '../search_componenets/SearchOutcome'\r\nimport Grade from '../search_componenets/SearchGrade'\r\nimport Letter from '../search_componenets/SearchLetterGrade'\r\nimport Note from '../search_componenets/SearchNote'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SearchCourse =()=> {\r\n    const courseList=Object.keys(InfoData)\r\n    const classes = useStyles();\r\n\r\n    const [course, setCourse] = React.useState('');\r\n    const handleChange = (event) => {\r\n        setCourse(event.target.value);\r\n    };\r\n    const [outcome,setOutcome]=useState({})\r\n    const [grade,setGrade]=useState({})\r\n    const [info,setInfo]=useState({})\r\n    const [letter,setLetter]=useState({})\r\n    const [note,setNote]=useState({})\r\n    const handleSelect =()=>{\r\n        let tempInfo = InfoData[course]\r\n        let tempGrade=GradesData[course]\r\n        let tempOutcome=OutcomeData[course]\r\n        let tempLetter=LetterData[course]\r\n        let tempNote=NoteData[course]\r\n        setOutcome(tempOutcome)\r\n        setInfo(tempInfo)\r\n        setGrade(tempGrade)\r\n        setLetter(tempLetter)\r\n        setNote(tempNote)\r\n        //console.log(tempOutcome)\r\n    }\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n\r\n            <Grid container spacing={2}>\r\n                <Grid item xs>\r\n                    <Paper className={classes.paper}>\r\n\r\n                        <FormControl className={classes.formControl}>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={course}\r\n                                onChange={(e)=>{\r\n                                    //console.log(e.target)\r\n                                    handleChange(e)\r\n                                }}\r\n\r\n\r\n                            >\r\n                                {courseList.map((i)=>(\r\n                                    <MenuItem value={i}>{i}</MenuItem>\r\n                                ))}\r\n\r\n\r\n                            </Select>\r\n                        </FormControl>\r\n                        <InputLabel id=\"demo-simple-select-label\">Select Course</InputLabel>\r\n\r\n\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Paper className={classes.paper}><Button variant=\"outlined\" color=\"secondary\" fullWidth={true} onClick={()=>{handleSelect()}}>\r\n                        Select\r\n                    </Button></Paper>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Info info={info}/>\r\n            <Outcome outcome={outcome}/>\r\n            <Grade grade={grade}/>\r\n            <Note note={note}/>\r\n            <Letter letter={letter}/>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nexport default SearchCourse","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\pages\\AddCourse.js",["108","109","110","111"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\navigation\\Navbar.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunInfo.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunOutcome.js",["112","113","114"],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunGrade.js",["115","116","117"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst FunGrade=()=> {\r\n    var defaultTexts = [\"a) You must either achieve at least 50% on the final exam or achieve at least 50% on the weighted average of the midterm and final exam. You must also achieve an average of at least 50% on the lab section of the course. If you do not satisfy these caveats, you will not receive a passing grade.\",\r\n        \"b) Circumstances beyond one’s control (e.g. sickness, etc.), leading to missing lab session and/or delays in assignment submissions should be discussed with the course instructor as soon as possible. Proper documentation must be provided.\",\r\n        \"c) Conversion from a score out of 100 to a letter grade will be done using the conversion chart shown below. This grading scale can only be changed during the term if the grades will not be lowered.\"]\r\n    return (\r\n        <div className=\"FunGrade\">\r\n            {/*<h1> This is the Grade Section</h1>*/}\r\n            <p align=\"left\">The final grade in this course will be based on the following components:</p>\r\n            <div align=\"center\"><FinalGradeTable/></div>\r\n            <div class=\"content\" align=\"center\">\r\n                <h5 className=\"subtitle is-4\" align=\"left\"> Notes: </h5>\r\n                <Notes/>\r\n\r\n            </div>\r\n            <label className=\"label is-size-5 has-text-left pl-1\">Letter Grades</label>\r\n            <div align=\"center\"><LetterGradeTable/></div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// The first table\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\nfunction FinalGradeTable() {\r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"20%\" />\r\n                        <col width=\"40%\" />\r\n                        <col width=\"20%\" />\r\n\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Component</TableCell>\r\n                            <TableCell>Learning Outcome(s) Evaluated</TableCell>\r\n                            <TableCell>Weight</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                        editNums(row.id,e.target.value)\r\n                                    }} />\r\n                                </TableCell>\r\n                                <TableCell><TextField id=\"standard-basic\" fullWidth={true} onChange={(e) => {\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n                                <TableCell ><TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n\r\n                                <div className={classes.root} align=\"center\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button}\r\n                                                size=\"small\"\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={()=>\r\n                                                    removeRow(row.id)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={()=>{\r\n                                                    saveRow(row.id)\r\n                                                }}\r\n                                            >\r\n                                                Save\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n// The second table\r\nfunction LetterGradeTable() {\r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"20%\" />\r\n                        <col width=\"20%\" />\r\n                        <col width=\"20%\" />\r\n                        <col width=\"20%\" />\r\n\r\n\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Letter Grade</TableCell>\r\n                            <TableCell>Lower Boundary</TableCell>\r\n                            <TableCell>Total Mark (T) </TableCell>\r\n                            <TableCell>Upper Boundary</TableCell>\r\n\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                        editNums(row.id,e.target.value)\r\n                                    }} />\r\n                                </TableCell>\r\n                                <TableCell><TextField id=\"standard-basic\" fullWidth={true} onChange={(e) => {\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n                                <TableCell ><th>≤  T  &lt;</th>\r\n                                </TableCell>\r\n\r\n                                <TableCell ><TextField id=\"standard-basic\" onChange={(e) => {\r\n\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} />\r\n                                </TableCell>\r\n\r\n\r\n                                <div className={classes.root} align=\"center\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button}\r\n                                                size=\"small\"\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={()=>\r\n                                                    removeRow(row.id)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={()=>{\r\n                                                    saveRow(row.id)\r\n                                                }}\r\n                                            >\r\n                                                Save\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Notes() {\r\n    const [count, setCount] = useState(2);\r\n    const classes = useStyles();\r\n    const [rows, setRows] = useState([{ id: 1,  outcome: \"\" }]);\r\n    const [numbers,setNumbers]=useState([{id:1,num:1}])\r\n    const [outcomes,setOutcomes]=useState([{id:1,outcome:\"\"}])\r\n\r\n    const editNums=(id,num)=>{\r\n        let indx = numbers.findIndex((num)=>num.id===id)\r\n        let newNums=numbers\r\n        //console.log(indx)\r\n        if(indx>=0)\r\n            newNums[indx]={id:id,num:num}\r\n        else\r\n            newNums.push({id:id,num:num})\r\n\r\n        setNumbers(newNums)\r\n        // console.log(numbers)\r\n    }\r\n    const ediOutcomes=(id,outcome)=>{\r\n        let indx = outcomes.findIndex((row) => row.id === id)\r\n        let newOutcomes=outcomes\r\n        if(indx>=0)\r\n            newOutcomes[indx]={id:id,outcome:outcome}\r\n        else\r\n            newOutcomes.push({id:id,outcome:outcome})\r\n        setOutcomes(newOutcomes)\r\n        //console.log(outcomes)\r\n    }\r\n\r\n    const saveRow= (id) => {\r\n        let numIndx = outcomes.findIndex((row) => row.id === id)\r\n        let num=numbers[numIndx].num\r\n        let outcomeIndx=outcomes.findIndex((outcome)=> outcome.id===id)\r\n        let outcome=outcomes[outcomeIndx].outcome\r\n        let rowIndx = rows.findIndex((row) => row.id === id)\r\n        let newRows=rows\r\n        newRows[rowIndx]={ id: id,num:num,outcome: outcome }\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    };\r\n\r\n    const removeRow = (id) => {\r\n        let newRows = rows.filter((row) => row.id !== id)\r\n\r\n        setRows(newRows)\r\n    }\r\n    const addRow = (id) => {\r\n        let newRows = rows\r\n        setCount(count+1)\r\n        let x=count\r\n        console.log(\"THIS IS \"+x)\r\n        newRows.push({ id: x, outcome: \"\" })\r\n        setRows(newRows)\r\n        console.log(rows)\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <colgroup>\r\n                        <col width=\"5%\" />\r\n                        <col width=\"5%\" />\r\n                        <col width=\"70%\" />\r\n\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Note #</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell>Note Message</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell align=\"right\"><TextField id=\"standard-basic\" onChange={(e) => {\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} /></TableCell>\r\n\r\n                                <TableCell align=\"right\">\r\n                                    <p>)</p>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"right\"><TextField id=\"standard-basic\" fullWidth={true}  onChange={(e) => {\r\n                                    ediOutcomes(row.id,e.target.value)\r\n                                }} /></TableCell>\r\n\r\n\r\n                                <div className={classes.root} align=\"center\">\r\n                                    <Grid container spacing={3}>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                className={classes.button}\r\n                                                size=\"small\"\r\n                                                startIcon={<DeleteIcon />}\r\n                                                onClick={()=>\r\n                                                    removeRow(row.id)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                            <Paper className={classes.paper}><Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                className={classes.button}\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={()=>{\r\n                                                    saveRow(row.id)\r\n                                                }}\r\n                                            >\r\n                                                Save\r\n                                            </Button></Paper>\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                </div>\r\n\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                    addRow()\r\n                }}> +</Button>\r\n            </TableContainer>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n// export default\r\nexport default FunGrade;","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchOutcome.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInfo.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchLetterGrade.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchNote.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTimetable.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchCalculator.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchExaminations.js",["118"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function SearchExaminations(props) {\r\n \r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n    <Typography variant=\"h7\">\r\n        <div dangerouslySetInnerHTML={ { __html: \"Placeholder\" } }></div>    \r\n    </Typography>\r\n    </>\r\n  );\r\n}\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchPolicies.js",["119"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function SearchPolicies() {\r\n \r\n  \r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n\r\n    <Typography variant=\"h7\">\r\n        <div dangerouslySetInnerHTML={ { __html: \"\" } }></div>    \r\n    </Typography>\r\n\r\n     '<u>Advising Syllabus:</u>\r\n     <p align = \"left\">\r\n     All Schulich School of Engineering students and instructors have a responsibility to familiarize themselves with the \r\n     policies described in the Schulich School of Engineering Advising Syllabus available at:\r\n     </p>\r\n     <br/>\r\n     <p align = \"left\">\r\n     <a href = \"http://schulich.ucalgary.ca/undergraduate/advising\">\r\n     http://schulich.ucalgary.ca/undergraduate/advising\r\n     </a>\r\n     </p>\r\n\r\n\r\n     <br/>\r\n     <u>Emergency Evacuation/Assembly Points</u>\r\n     <p align = \"left\">\r\n     In the event of an alarm sounding, all classrooms and labs must be evacuated immediately.  Please respond to alarms \r\n     promptly by leaving the building by the closest available exit.  Faculty and students must remain outside the building \r\n     until the 'all clear' has been given by a Fire Marshall. In case of emergency, call 220-5333.\r\n     </p>\r\n     <br/>\r\n     <p align = \"left\">\r\n     Assembly Points have been identified across campus. These areas have been selected as they are large enough to hold a \r\n     significant number of people and will provide an evacuated population access to washroom facilities and protection from \r\n     the elements. More information on assembly points can be found at \r\n     </p>\r\n     <br/>\r\n     <p align = \"left\">\r\n     <a href = \"http://www.ucalgary.ca/emergencyplan/assemblypoints\">\r\n     http://www.ucalgary.ca/emergencyplan/assemblypoints.\r\n     </a>\r\n     </p>\r\n\r\n     <br/>\r\n     <u>WELLNESS AND MENTAL HEALTH RESOURCES</u>\r\n     <p align = \"left\">\r\n     The University of Calgary recognizes the pivotal role that student mental health plays in physical health, social \r\n     connectedness and academic success, and aspires to create a caring and supportive campus community where individuals \r\n     can freely talk about mental health and receive supports when needed. We encourage you to explore the mental health \r\n     resources available throughout the university community, such as counselling, self-help resources, peer support or \r\n     skills-building available through the SU Wellness Centre (Room 370, MacEwan Student Centre, \r\n    <a href = \"https://www.ucalgary.ca/wellnesscentre/services/mental-health-services\"> https://www.ucalgary.ca/wellnesscentre/services/mental-health-services</a>) \r\n    and the Campus Mental Health Strategy website \r\n     (<a href = \"http://www.ucalgary.ca/mentalhealth/\">http://www.ucalgary.ca/mentalhealth/</a>).\r\n     </p>'\r\n\r\n\r\n\r\n  \r\n    </>\r\n  );\r\n}\r\n","D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchInstructors.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\search_componenets\\SearchTextbook.js",[],"D:\\Lotfi\\Coursework\\Fall 2020\\ENSF 607\\web-development-project-ensf-607\\project\\course_oultine_app\\src\\add_outline_componenets\\FunCalculator.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":77,"column":10,"nodeType":"126","messageId":"127","endLine":77,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":77,"column":21,"nodeType":"126","messageId":"127","endLine":77,"endColumn":33},{"ruleId":"124","severity":1,"message":"129","line":78,"column":10,"nodeType":"126","messageId":"127","endLine":78,"endColumn":21},{"ruleId":"124","severity":1,"message":"130","line":78,"column":23,"nodeType":"126","messageId":"127","endLine":78,"endColumn":37},{"ruleId":"124","severity":1,"message":"131","line":79,"column":10,"nodeType":"126","messageId":"127","endLine":79,"endColumn":22},{"ruleId":"124","severity":1,"message":"132","line":79,"column":24,"nodeType":"126","messageId":"127","endLine":79,"endColumn":39},{"ruleId":"124","severity":1,"message":"133","line":80,"column":10,"nodeType":"126","messageId":"127","endLine":80,"endColumn":20},{"ruleId":"124","severity":1,"message":"134","line":80,"column":22,"nodeType":"126","messageId":"127","endLine":80,"endColumn":35},{"ruleId":"124","severity":1,"message":"135","line":81,"column":10,"nodeType":"126","messageId":"127","endLine":81,"endColumn":18},{"ruleId":"124","severity":1,"message":"136","line":81,"column":20,"nodeType":"126","messageId":"127","endLine":81,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":422,"column":6,"nodeType":"139","endLine":422,"endColumn":59,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":18},{"ruleId":"124","severity":1,"message":"142","line":19,"column":8,"nodeType":"126","messageId":"127","endLine":19,"endColumn":25},{"ruleId":"124","severity":1,"message":"143","line":20,"column":10,"nodeType":"126","messageId":"127","endLine":20,"endColumn":16},{"ruleId":"124","severity":1,"message":"144","line":20,"column":18,"nodeType":"126","messageId":"127","endLine":20,"endColumn":29},{"ruleId":"124","severity":1,"message":"145","line":13,"column":8,"nodeType":"126","messageId":"127","endLine":13,"endColumn":12},{"ruleId":"124","severity":1,"message":"146","line":23,"column":10,"nodeType":"126","messageId":"127","endLine":23,"endColumn":20},{"ruleId":"124","severity":1,"message":"147","line":37,"column":9,"nodeType":"126","messageId":"127","endLine":37,"endColumn":17},{"ruleId":"124","severity":1,"message":"148","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":21},{"ruleId":"124","severity":1,"message":"146","line":43,"column":10,"nodeType":"126","messageId":"127","endLine":43,"endColumn":20},{"ruleId":"124","severity":1,"message":"147","line":344,"column":11,"nodeType":"126","messageId":"127","endLine":344,"endColumn":19},{"ruleId":"124","severity":1,"message":"149","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},{"ruleId":"124","severity":1,"message":"149","line":17,"column":9,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'timetable' is assigned a value but never used.","Identifier","unusedVar","'setTimetable' is assigned a value but never used.","'instructors' is assigned a value but never used.","'setInstructors' is assigned a value but never used.","'examinations' is assigned a value but never used.","'setExaminations' is assigned a value but never used.","'calculator' is assigned a value but never used.","'setCalculator' is assigned a value but never used.","'textbook' is assigned a value but never used.","'setTextbook' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displaySearchResults', 'handleSelect', 'handleUpdate', and 'revealIcons'. Either include them or remove the dependency array.","ArrayExpression",["152"],"'ReactQuill' is defined but never used.","'MUIRichTextEditor' is defined but never used.","'Editor' is defined but never used.","'EditorState' is defined but never used.","'Grid' is defined but never used.","'createData' is defined but never used.","'editNums' is assigned a value but never used.","'defaultTexts' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [info, searchInput, tableSelection, callHandleSelect, revealIcons, displaySearchResults, handleUpdate, handleSelect]",{"range":"155","text":"156"},[13783,13836],"[info, searchInput, tableSelection, callHandleSelect, revealIcons, displaySearchResults, handleUpdate, handleSelect]"]